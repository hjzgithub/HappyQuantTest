该项目旨在建立一个回测/模拟盘/实盘框架，主要分为数据接口，策略，交易接口三个模块

crypto数据主要分为spot数据，future数据，option数据

    数据源为：https://data.binance.vision/?prefix=

    项目参考：https://github.com/Yisan-X/Crypto_Data

    数据按日更新，考虑1分钟频率的策略，后续再考虑如何实时获取一分钟频率的数据

计划：
1. （已完成）btc期货单日/多日/多进程多日主力合约1min数据的获取 -- 获取一个月的数据
2. （已完成）tushare通过api获取单个合约/多个合约 股指日线全部数据，[000016, 000300, 000905, 000852]
    （已完成）实现log输出代替print
    （已完成）实现动量因子的计算，并存到factors文件夹内
    （已完成）动量因子相关性测试
    （已完成）同类因子合成：比较benchmark，equal_weight，OLS，PCA+OLS的效果
    （已完成）改变预测目标比较效果 -- tag_raw, tag_ranked
    （已完成）计算年化收益率，夏普比率，最大回撤, 交易胜率，盈亏比，换手率等，绘制回测曲线 -- 绘制超额收益曲线
    （已完成）纯多头时序策略连续因子 -> 仓位 -- 计算累积rank，将累积rank值直接作为仓位
    （已完成）采用多进程加速 滚动OLS的计算
    （已完成）实现同类因子合成的超参数测试
    （已完成）高相关性大类因子的合成（动量和双均线）
    （已完成）将坐标轴改成时间轴
    （已完成）把list_pnl改成dict_pnl，进行择时策略多合约组合的模块化 -- 等权
    （已完成）多加几个因子--KDJ，RSI，RUMI
    （已完成）引入收益率的正负作为标签，并采用逻辑回归，
    （已完成）将因子组合的方法分为：{'rule_based': 'vote', 'equal weight', 'prediction_based': 'OLSLRModel',...}, vote并不需要组合的时候判断方向和归一化
    （已完成）对不同资产择时表现的可视化，对组合与benchmark对比的可视化
    （已完成）有了vote，就需要考虑equal weight的必要性 -- vote的本质是equal weight，其实是指标取不取rank的影响
    （已完成）逻辑回归如果做二分类的话，方向判断太不敏感，容易出现一直做多和一直做空的情况，可以考虑三分类
    （已完成）只考虑了满仓，没考虑动态仓位，考虑将1，0，0.5改为1，-1， 0，这样就不用考虑仓位管理了
    （已完成）run_model会导致有缺失值，在绘图时应该考虑缺失值的影响，绘图时应该只输入收益率，drop掉缺失值在组合资产的时候绘图出现异常
    （已完成）连续因子的离散化信息存放问题，多写一个文件加上后缀 _discretized
    （已完成）tag_ranked作为目标的OLS仓位太小了，取0.5为阈值，表现要比raw好一点
    （已完成）比较对于离散和连续数据，Logitstic的表现差异，离散因子的表现要好一点，而且能解决lbfgs不收敛的问题，但特征多了还是容易不收敛
    （已完成）比较OLS使用PCA的效果，并不好，关于在PCA之前是否需要标准化的问题，ts_z_score标准化之后效果改善
    （已完成）实现通过字符串批量导入类
    （已完成）逻辑回归的参数需要仔细调整，容易出现不收敛的情况，逻辑回归三分类的效果并不好，考虑改进
    

    （未完成）完善模型的评价部分+模型融合：等权的问题在于: 参数多的，权重会更大，每个模型只取一套参数，然后投票
    （未完成）因子筛选：线性回归系数显著性筛选（容易出现空值，即一个显著变量都没有）
                        L1正则化（容易出现不收敛的情况，可能需要先归一化）-- 效果并不好 -- 如何引入第二个模型
                        分组回归筛选--归因，变量数的可视化
    （未完成）因子分类（基于逻辑）：不同参数的同一因子归为一类 还是 不同周期的因子归为一类 
    （未完成）因子正交化（已有成熟策略的情况下）
    （未完成）因子平滑的必要性在哪里
    （未完成）择时策略多合约组合的模块化（目标波动率）
    （未完成）构建策略模板，和模型一样设定参数yaml文件
    （未完成）用向量化进行多策略聚合，然后用事件驱动确定最终仓位

3. （已完成）（未完成迁移）tushare通过api获取全A个股（后复权）日线数据，存入Mysql数据库 -- 再搞个未复权数据
    trading_db 改名为 raw_data_db
    完善数据库(raw_data_db和factor_db)

4. （未完成）引入五分钟频率的股指数据
    将日频的因子和target，通过14:55分开

5. tushare通过api获取商品期货日线数据，存入pkl/nosql

问题：
因子时序标准化的方法存在疑问（扩展窗口还是滚动窗口，rank还是z-score），归一化/标准化和时序/截面的差异